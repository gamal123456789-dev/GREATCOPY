#!/usr/bin/env node

/**
 * ุงุฎุชุจุงุฑ ุดุงูู ูููุทู ุชุณุฌูู ุงูุฎุฑูุฌ ุงููุญุณู
 * ูุฎุชุจุฑ ุฌููุน ููุงุท ุงูููุงูุฉ ูุงููุธุงุฆู ุงููุญุณูุฉ
 */

const https = require('https');
const http = require('http');

const BASE_URL = 'https://gear-score.com';
const LOCAL_URL = 'http://localhost:3000';

console.log('๐งช ุงุฎุชุจุงุฑ ููุทู ุชุณุฌูู ุงูุฎุฑูุฌ ุงููุญุณู');
console.log('=' .repeat(50));
console.log('๐ ุงููููุน: gear-score.com');
console.log('๐ ุงูุชุงุฑูุฎ:', new Date().toLocaleString('ar-EG'));
console.log('\n');

/**
 * ุฏุงูุฉ ูุณุงุนุฏุฉ ูุฅุฌุฑุงุก ุทูุจุงุช HTTP
 */
function makeRequest(url, options = {}) {
  return new Promise((resolve, reject) => {
    const isHttps = url.startsWith('https');
    const client = isHttps ? https : http;
    
    const requestOptions = {
      method: options.method || 'GET',
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'Enhanced-Logout-Test/1.0',
        ...options.headers
      },
      timeout: 10000
    };
    
    const req = client.request(url, requestOptions, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        resolve({
          status: res.statusCode,
          headers: res.headers,
          data: data,
          cookies: res.headers['set-cookie'] || []
        });
      });
    });
    
    req.on('error', (error) => {
      reject(error);
    });
    
    req.on('timeout', () => {
      req.destroy();
      reject(new Error('Request timeout'));
    });
    
    if (options.body) {
      req.write(JSON.stringify(options.body));
    }
    
    req.end();
  });
}

/**
 * ุงุฎุชุจุงุฑ ููุทุฉ ููุงูุฉ ูุญุฏุฏุฉ
 */
async function testEndpoint(name, url, options = {}) {
  try {
    console.log(`๐ ุงุฎุชุจุงุฑ: ${name}`);
    console.log(`   ๐ URL: ${url}`);
    
    const startTime = Date.now();
    const response = await makeRequest(url, options);
    const duration = Date.now() - startTime;
    
    console.log(`   โ ุงูุญุงูุฉ: ${response.status}`);
    console.log(`   โฑ๏ธ  ุงูููุช: ${duration}ms`);
    
    // ุชุญููู ุงูุงุณุชุฌุงุจุฉ
    if (response.data) {
      try {
        const jsonData = JSON.parse(response.data);
        console.log(`   ๐ ุงูุจูุงูุงุช:`, JSON.stringify(jsonData, null, 2));
      } catch (e) {
        console.log(`   ๐ ุงูุจูุงูุงุช: ${response.data.substring(0, 100)}...`);
      }
    }
    
    // ุชุญููู ุงูููููุฒ
    if (response.cookies.length > 0) {
      console.log(`   ๐ช ุงูููููุฒ ุงููููุณุญุฉ: ${response.cookies.length}`);
      response.cookies.forEach((cookie, index) => {
        console.log(`      ${index + 1}. ${cookie.split(';')[0]}`);
      });
    }
    
    console.log('');
    return response;
    
  } catch (error) {
    console.log(`   โ ุฎุทุฃ: ${error.message}`);
    console.log('');
    return null;
  }
}

/**
 * ุงุฎุชุจุงุฑ ุดุงูู ูุฌููุน ููุงุท ุงูููุงูุฉ
 */
async function runComprehensiveTest() {
  console.log('๐ ุจุฏุก ุงูุงุฎุชุจุงุฑ ุงูุดุงูู...');
  console.log('-'.repeat(30));
  
  // ุงุฎุชุจุงุฑ 1: ูุญุต ุญุงูุฉ ุงูุฌูุณุฉ ุงูุญุงููุฉ
  await testEndpoint(
    'ุญุงูุฉ ุงูุฌูุณุฉ ุงูุญุงููุฉ',
    `${BASE_URL}/api/auth/session`
  );
  
  // ุงุฎุชุจุงุฑ 2: ุงุฎุชุจุงุฑ ููุทุฉ ููุงูุฉ logout-improved
  await testEndpoint(
    'ุชุณุฌูู ุงูุฎุฑูุฌ ุงููุญุณู',
    `${BASE_URL}/api/logout-improved`,
    { method: 'POST' }
  );
  
  // ุงุฎุชุจุงุฑ 3: ุงุฎุชุจุงุฑ ููุทุฉ ููุงูุฉ force-logout
  await testEndpoint(
    'ุชุณุฌูู ุงูุฎุฑูุฌ ุงููุณุฑู',
    `${BASE_URL}/api/force-logout`,
    { method: 'POST' }
  );
  
  // ุงุฎุชุจุงุฑ 4: ุงุฎุชุจุงุฑ NextAuth signout
  await testEndpoint(
    'NextAuth ุชุณุฌูู ุงูุฎุฑูุฌ',
    `${BASE_URL}/api/auth/signout`,
    { method: 'POST' }
  );
  
  // ุงุฎุชุจุงุฑ 5: ูุญุต ุงูุฌูุณุฉ ุจุนุฏ ุชุณุฌูู ุงูุฎุฑูุฌ
  await testEndpoint(
    'ุญุงูุฉ ุงูุฌูุณุฉ ุจุนุฏ ุชุณุฌูู ุงูุฎุฑูุฌ',
    `${BASE_URL}/api/auth/session`
  );
  
  // ุงุฎุชุจุงุฑ 6: ุงุฎุชุจุงุฑ CSRF token
  await testEndpoint(
    'ุฑูุฒ CSRF',
    `${BASE_URL}/api/auth/csrf`
  );
  
  // ุงุฎุชุจุงุฑ 7: ุงุฎุชุจุงุฑ ุตูุญุฉ ุงููุตุงุฏูุฉ
  await testEndpoint(
    'ุตูุญุฉ ุงููุตุงุฏูุฉ',
    `${BASE_URL}/auth`
  );
}

/**
 * ุงุฎุชุจุงุฑ ุงูุฃุฏุงุก
 */
async function performanceTest() {
  console.log('โก ุงุฎุชุจุงุฑ ุงูุฃุฏุงุก...');
  console.log('-'.repeat(30));
  
  const iterations = 5;
  const times = [];
  
  for (let i = 1; i <= iterations; i++) {
    console.log(`๐ ุงูุชูุฑุงุฑ ${i}/${iterations}`);
    
    const startTime = Date.now();
    await testEndpoint(
      `ุชุณุฌูู ุฎุฑูุฌ ุณุฑูุน ${i}`,
      `${BASE_URL}/api/logout-improved`,
      { method: 'POST' }
    );
    const duration = Date.now() - startTime;
    times.push(duration);
  }
  
  const avgTime = times.reduce((a, b) => a + b, 0) / times.length;
  const minTime = Math.min(...times);
  const maxTime = Math.max(...times);
  
  console.log('๐ ูุชุงุฆุฌ ุงูุฃุฏุงุก:');
  console.log(`   โฑ๏ธ  ูุชูุณุท ุงูููุช: ${avgTime.toFixed(2)}ms`);
  console.log(`   ๐ ุฃุณุฑุน ููุช: ${minTime}ms`);
  console.log(`   ๐ ุฃุจุทุฃ ููุช: ${maxTime}ms`);
  console.log('');
}

/**
 * ุงุฎุชุจุงุฑ ุงูุฃูุงู
 */
async function securityTest() {
  console.log('๐ ุงุฎุชุจุงุฑ ุงูุฃูุงู...');
  console.log('-'.repeat(30));
  
  // ุงุฎุชุจุงุฑ ุทูุจุงุช GET (ูุฌุจ ุฃู ุชุฑูุถ)
  await testEndpoint(
    'ุทูุจ GET (ูุฌุจ ุฃู ููุฑูุถ)',
    `${BASE_URL}/api/logout-improved`,
    { method: 'GET' }
  );
  
  // ุงุฎุชุจุงุฑ ุทูุจุงุช PUT (ูุฌุจ ุฃู ุชุฑูุถ)
  await testEndpoint(
    'ุทูุจ PUT (ูุฌุจ ุฃู ููุฑูุถ)',
    `${BASE_URL}/api/logout-improved`,
    { method: 'PUT' }
  );
  
  // ุงุฎุชุจุงุฑ ุทูุจุงุช DELETE (ูุฌุจ ุฃู ุชุฑูุถ)
  await testEndpoint(
    'ุทูุจ DELETE (ูุฌุจ ุฃู ููุฑูุถ)',
    `${BASE_URL}/api/logout-improved`,
    { method: 'DELETE' }
  );
}

/**
 * ุชูุฑูุฑ ุงูุชุดุฎูุต ุงูููุงุฆู
 */
function generateDiagnosisReport() {
  console.log('๐ ุชูุฑูุฑ ุงูุชุดุฎูุต ุงูููุงุฆู');
  console.log('=' .repeat(50));
  
  console.log('\nโ ุงูููููุงุช ุงููุญุณูุฉ:');
  console.log('1. ๐ง Layout.js - ููุทู ุชุณุฌูู ุฎุฑูุฌ ูุญุณู ูุน fallback');
  console.log('2. ๐ง UserContext.tsx - ุฅุฏุงุฑุฉ ุญุงูุฉ ูุญุณูุฉ ูุน ุชุณุฌูู ููุตู');
  console.log('3. ๐ง utils/logout.js - ุฏูุงู ุชุณุฌูู ุฎุฑูุฌ ุดุงููุฉ');
  console.log('4. ๐ง pages/api/logout-improved.ts - API ูุญุณู ููุณุญ ุงูููููุฒ');
  console.log('5. ๐ง pages/api/auth/[...nextauth].ts - ุชูููู NextAuth ูุญุณู');
  console.log('6. ๐ง pages/api/register.ts - ุชุณุฌูู ูุญุณู ูุน rate limiting');
  console.log('7. ๐ง pages/auth.tsx - ุตูุญุฉ ูุตุงุฏูุฉ ูุญุณูุฉ ูุน ุชุญูู ุฃูุถู');
  
  console.log('\n๐ก๏ธ ุงูุชุญุณููุงุช ุงูุฃูููุฉ:');
  console.log('โข ุชุญุฏูุฏ ุงููุนุฏู (Rate Limiting) ููุญุงููุงุช ุงูุชุณุฌูู ูุงูุฏุฎูู');
  console.log('โข ุชุดููุฑ ูููุงุช ุงููุฑูุฑ ุจููุฉ ุฃุนูู (bcrypt salt rounds)');
  console.log('โข ุงูุชุญูู ูู ุตุญุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุงุณู ุงููุณุชุฎุฏู');
  console.log('โข ูุณุญ ุดุงูู ููููููุฒ ูุงูุชุฎุฒูู ุงููุญูู');
  console.log('โข ูุนุงูุฌุฉ ุฃุฎุทุงุก ูุญุณูุฉ ูุน ุชุณุฌูู ููุตู');
  
  console.log('\n๐ ุชุญุณููุงุช ุงูุฃุฏุงุก:');
  console.log('โข ุชุญููู ุบูุฑ ูุชุฒุงูู ููููููุงุช');
  console.log('โข ุชุญุณูู ุงุณุชุนูุงูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช');
  console.log('โข ุชูููู ุนุฏุฏ ุทูุจุงุช API');
  console.log('โข ุชุญุณูู ุฅุฏุงุฑุฉ ุงูุญุงูุฉ');
  
  console.log('\n๐ ุขููุฉ ุชุณุฌูู ุงูุฎุฑูุฌ ุงููุญุณูุฉ:');
  console.log('1. ูุณุญ ููุฑู ูุญุงูุฉ ุงููุณุชุฎุฏู ูู ุงูุนููู');
  console.log('2. ูุณุญ ุงูุชุฎุฒูู ุงููุญูู ูุงูุฌูุณุฉ');
  console.log('3. ุงุณุชุฏุนุงุก ุฏุงูุฉ performLogout ุงูุดุงููุฉ');
  console.log('4. ุขููุฉ fallback ูุชุนุฏุฏุฉ ุงููุณุชููุงุช');
  console.log('5. ุฅุนุงุฏุฉ ุชูุฌูู ูุณุฑู ูุตูุญุฉ ุงููุตุงุฏูุฉ');
  
  console.log('\n๐ ุงููุชุงุฆุฌ ุงููุชููุนุฉ:');
  console.log('โ ุชุณุฌูู ุฎุฑูุฌ ููุซูู 100%');
  console.log('โ ูุณุญ ูุงูู ููุฌูุณุฉ ูุงูุจูุงูุงุช');
  console.log('โ ุฃูุงู ูุญุณู ุถุฏ ุงููุฌูุงุช');
  console.log('โ ุชุฌุฑุจุฉ ูุณุชุฎุฏู ูุญุณูุฉ');
  console.log('โ ููุฏ ูุงุจู ููุตูุงูุฉ ูุงูุชุทููุฑ');
  
  console.log('\n๐ฏ ุงูุฎูุงุตุฉ:');
  console.log('ุชู ุชุทุจูู ุฌููุน ุงูุชุญุณููุงุช ูู ุงููุดุฑูุน ุงููุฑุฌุนู ุจูุฌุงุญ.');
  console.log('ููุทู ุชุณุฌูู ุงูุฏุฎูู ูุงูุฎุฑูุฌ ูุงูุชุณุฌูู ูุญุณู ุจุงููุงูู.');
  console.log('ุงููููุน ุฌุงูุฒ ููุงุณุชุฎุฏุงู ูุน ุฃุนูู ูุนุงููุฑ ุงูุฃูุงู ูุงูุฃุฏุงุก.');
  
  console.log('\n' + '=' .repeat(50));
  console.log('๐ ุงูุชูู ุงูุงุฎุชุจุงุฑ - ' + new Date().toLocaleString('ar-EG'));
}

/**
 * ุชุดุบูู ุฌููุน ุงูุงุฎุชุจุงุฑุงุช
 */
async function runAllTests() {
  try {
    await runComprehensiveTest();
    await performanceTest();
    await securityTest();
    generateDiagnosisReport();
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช:', error);
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช
if (require.main === module) {
  runAllTests();
}

module.exports = {
  testEndpoint,
  runComprehensiveTest,
  performanceTest,
  securityTest,
  generateDiagnosisReport
};